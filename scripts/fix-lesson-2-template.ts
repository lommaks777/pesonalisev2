/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ —É—Ä–æ–∫–∞ 2 –∫—É—Ä—Å–∞ "–ú–∞—Å—Å–∞–∂ –®–í–ó"
 * 
 * –ü—Ä–æ–±–ª–µ–º–∞: —É—Ä–æ–∫ 2 –≤ –ë–î –∏–º–µ–µ—Ç —à–∞–±–ª–æ–Ω –æ—Ç —É—Ä–æ–∫–∞ 11 (–ø–æ—Å—Ç–∏–∑–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è)
 * –†–µ—à–µ–Ω–∏–µ: –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —É—Ä–æ–∫ "–ú—ã—à—Ü—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å" –∏ –æ–±–Ω–æ–≤–∏—Ç—å
 */

import { createClient } from '@supabase/supabase-js';
import * as fs from 'fs';
import * as path from 'path';

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !serviceRoleKey) {
  console.error('‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!');
  console.log('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ NEXT_PUBLIC_SUPABASE_URL –∏ SUPABASE_SERVICE_ROLE_KEY –∑–∞–¥–∞–Ω—ã');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, serviceRoleKey);

async function main() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ä–æ–∫–∞ 2 –∫—É—Ä—Å–∞ "–ú–∞—Å—Å–∞–∂ –®–í–ó"...\n');
  
  // 1. –ù–∞–π—Ç–∏ –∫—É—Ä—Å
  const { data: course, error: courseError } = await supabase
    .from('courses')
    .select('id, slug, title')
    .eq('slug', 'massazh-shvz')
    .single();
  
  if (courseError || !course) {
    console.error('‚ùå –ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω:', courseError);
    return;
  }
  
  console.log('‚úÖ –ö—É—Ä—Å –Ω–∞–π–¥–µ–Ω:', course.title);
  console.log('');
  
  // 2. –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —É—Ä–æ–∫–∏
  const { data: lessons } = await supabase
    .from('lessons')
    .select('id, lesson_number, title, content')
    .eq('course_id', course.id)
    .order('lesson_number');
  
  console.log('üìñ –£—Ä–æ–∫–∏ –∫—É—Ä—Å–∞:');
  lessons?.forEach(l => {
    console.log(`  ${l.lesson_number}. ${l.title}`);
  });
  console.log('');
  
  // 3. –ù–∞–π—Ç–∏ —É—Ä–æ–∫ 2
  const lesson2 = lessons?.find(l => l.lesson_number === 2);
  if (!lesson2) {
    console.error('‚ùå –£—Ä–æ–∫ 2 –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  console.log('üîç –¢–µ–∫—É—â–∏–π —É—Ä–æ–∫ 2:');
  console.log('  –ù–∞–∑–≤–∞–Ω–∏–µ:', lesson2.title);
  if (lesson2.content?.template) {
    const intro = lesson2.content.template['üëã –í–≤–µ–¥–µ–Ω–∏–µ'] || lesson2.content.template.introduction;
    console.log('  –í–≤–µ–¥–µ–Ω–∏–µ:', intro);
  }
  console.log('');
  
  // 4. –ù–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —É—Ä–æ–∫ –ø—Ä–æ –º—ã—à—Ü—ã
  const musclesLesson = lessons?.find(l => 
    l.title.toLowerCase().includes('–º—ã—à—Ü') || 
    l.title.toLowerCase().includes('—Ç–µ–æ—Ä–∏—è')
  );
  
  if (!musclesLesson) {
    console.log('‚ö†Ô∏è –£—Ä–æ–∫ –ø—Ä–æ –º—ã—à—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î');
    console.log('–ù—É–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —É—Ä–æ–∫ –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã');
    return;
  }
  
  console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —É—Ä–æ–∫ –ø—Ä–æ –º—ã—à—Ü—ã:');
  console.log('  –ù–æ–º–µ—Ä:', musclesLesson.lesson_number);
  console.log('  –ù–∞–∑–≤–∞–Ω–∏–µ:', musclesLesson.title);
  if (musclesLesson.content?.template) {
    const intro = musclesLesson.content.template['üëã –í–≤–µ–¥–µ–Ω–∏–µ'] || musclesLesson.content.template.introduction;
    console.log('  –í–≤–µ–¥–µ–Ω–∏–µ:', intro);
  }
  console.log('');
  
  // 5. –°–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  console.log('‚ùì –•–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å —à–∞–±–ª–æ–Ω—ã –º–µ—Å—Ç–∞–º–∏?');
  console.log(`   –£—Ä–æ–∫ ${lesson2.lesson_number} –ø–æ–ª—É—á–∏—Ç —à–∞–±–ª–æ–Ω –æ—Ç —É—Ä–æ–∫–∞ ${musclesLesson.lesson_number}`);
  console.log(`   –£—Ä–æ–∫ ${musclesLesson.lesson_number} –ø–æ–ª—É—á–∏—Ç —à–∞–±–ª–æ–Ω –æ—Ç —É—Ä–æ–∫–∞ ${lesson2.lesson_number}`);
  console.log('');
  console.log('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å —Ñ–ª–∞–≥–æ–º --fix');
  
  if (process.argv.includes('--fix')) {
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤...');
    
    // –ü–æ–º–µ–Ω—è—Ç—å —à–∞–±–ª–æ–Ω—ã –º–µ—Å—Ç–∞–º–∏
    const lesson2OldTemplate = lesson2.content?.template;
    const musclesTemplate = musclesLesson.content?.template;
    
    // –û–±–Ω–æ–≤–∏—Ç—å —É—Ä–æ–∫ 2
    const { error: update2Error } = await supabase
      .from('lessons')
      .update({
        content: {
          ...lesson2.content,
          template: musclesTemplate
        }
      })
      .eq('id', lesson2.id);
    
    if (update2Error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Ä–æ–∫–∞ 2:', update2Error);
      return;
    }
    
    console.log('‚úÖ –£—Ä–æ–∫ 2 –æ–±–Ω–æ–≤–ª—ë–Ω');
    
    // –û–±–Ω–æ–≤–∏—Ç—å —É—Ä–æ–∫ –ø—Ä–æ –ø–æ—Å—Ç–∏–∑–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫—É—é —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—é
    const { error: updateMusclesError } = await supabase
      .from('lessons')
      .update({
        content: {
          ...musclesLesson.content,
          template: lesson2OldTemplate
        }
      })
      .eq('id', musclesLesson.id);
    
    if (updateMusclesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Ä–æ–∫–∞ –ø—Ä–æ –º—ã—à—Ü—ã:', updateMusclesError);
      return;
    }
    
    console.log(`‚úÖ –£—Ä–æ–∫ ${musclesLesson.lesson_number} –æ–±–Ω–æ–≤–ª—ë–Ω`);
    console.log('');
    console.log('üéâ –®–∞–±–ª–æ–Ω—ã —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
  }
}

main().catch(console.error);
