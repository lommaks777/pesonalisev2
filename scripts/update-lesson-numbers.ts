import "dotenv/config";
import { Client } from "pg";
import fs from 'fs';
import path from 'path';

const connectionString = process.env.SUPABASE_DB_URL;

if (!connectionString) {
  console.error('‚ùå SUPABASE_DB_URL –Ω–µ –∑–∞–¥–∞–Ω. –ü–æ–ª—É—á–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ Supabase ‚Üí Project Settings ‚Üí Database ‚Üí Connection string.');
  process.exit(1);
}

// –ú–∞–ø–ø–∏–Ω–≥ –Ω–æ–≤—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ —É—Ä–æ–∫–æ–≤
const lessonNumberMapping: Record<string, number> = {
  '01': 1,  // –£—Ä–æ–∫ –≤–≤–µ–¥–µ–Ω–∏–µ
  '02': 2,  // –®–í–ó –ú—ã—à—Ü—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å
  '03': 3,  // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
  '04': 4,  // –ß—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä–∏–≥–≥–µ—Ä–Ω—ã–µ —Ç–æ—á–∫–∏
  '05': 5,  // 5 –£—Ä–æ–∫ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
  '06': 6,  // 6 —É—Ä–æ–∫ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ –∑–∞ –º–Ω–æ–π
  '07': 7,  // 2 —É—Ä–æ–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
  '08': 8,  // 2 –£—Ä–æ–∫ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ –∑–∞ –º–Ω–æ–π
  '09': 9,  // 3 —É—Ä–æ–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
  '10': 10, // 3 –£—Ä–æ–∫ –®–≤–∑ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ –∑–∞ –º–Ω–æ–π
  '11': 11, // –ß—Ç–æ —Ç–∞–∫–æ–µ –ø–æ—Å—Ç–∏–∑–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è
  '12': 12, // 4 —É—Ä–æ–∫-–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
};

async function updateLessonNumbers() {
  console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —É—Ä–æ–∫–æ–≤...');

  const client = new Client({ connectionString });
  await client.connect();

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Ä–æ–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const result = await client.query(`
      SELECT id, lesson_number, title 
      FROM lessons 
      ORDER BY lesson_number ASC
    `);

    const lessons = result.rows;
    console.log(`üìö –ù–∞–π–¥–µ–Ω–æ ${lessons.length} —É—Ä–æ–∫–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);

    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞ —É—Ä–æ–∫–æ–≤
    for (const lesson of lessons) {
      // –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª —É—Ä–æ–∫–∞
      const lessonDir = path.join(process.cwd(), 'store', 'shvz', 'lessons');
      const lessonFiles = fs.readdirSync(lessonDir, { withFileTypes: true })
        .filter(dirent => dirent.isDirectory())
        .map(dirent => dirent.name)
        .sort();

      let newNumber: number | null = null;
      let lessonFile: string | null = null;

      // –ò—â–µ–º —Ñ–∞–π–ª —É—Ä–æ–∫–∞ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
      for (const dir of lessonFiles) {
        const lessonPath = path.join(lessonDir, dir, 'lesson.json');
        if (fs.existsSync(lessonPath)) {
          try {
            const lessonData = JSON.parse(fs.readFileSync(lessonPath, 'utf8'));
            if (lessonData.title === lesson.title) {
              newNumber = lessonData.number;
              lessonFile = dir;
              break;
            }
          } catch (error) {
            console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${lessonPath}:`, error);
          }
        }
      }

      if (newNumber && newNumber !== lesson.lesson_number) {
        console.log(`üìù –û–±–Ω–æ–≤–ª—è–µ–º —É—Ä–æ–∫ "${lesson.title}": ${lesson.lesson_number} ‚Üí ${newNumber}`);
        
        await client.query(`
          UPDATE lessons 
          SET lesson_number = $1 
          WHERE id = $2
        `, [newNumber, lesson.id]);

        console.log(`‚úÖ –£—Ä–æ–∫ "${lesson.title}" —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω: ${lesson.lesson_number} ‚Üí ${newNumber}`);
      } else if (newNumber === lesson.lesson_number) {
        console.log(`‚úì –£—Ä–æ–∫ "${lesson.title}" —É–∂–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä: ${lesson.lesson_number}`);
      } else {
        console.warn(`‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª –¥–ª—è —É—Ä–æ–∫–∞ "${lesson.title}" (–Ω–æ–º–µ—Ä ${lesson.lesson_number})`);
      }
    }

    console.log('üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —É—Ä–æ–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  } finally {
    await client.end();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
updateLessonNumbers().catch(console.error);
