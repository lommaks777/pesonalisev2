/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª–∏ –≥–¥–µ –≤ –ø–æ–ª–µ name –∑–∞–ø–∏—Å–∞–Ω email
 * –ë–µ—Ä—ë—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –∏–∑ survey.real_name
 */

import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);

async function main() {
  console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï EMAIL –í –ü–û–õ–ï NAME\n');
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏
  const { data: profiles, error } = await supabase
    .from('profiles')
    .select('id, user_identifier, name, course_slug, survey');

  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π:', error);
    return;
  }

  if (!profiles || profiles.length === 0) {
    console.log('‚ö†Ô∏è  –ü—Ä–æ—Ñ–∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    return;
  }

  console.log(`üìä –í—Å–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: ${profiles.length}\n`);

  let fixed = 0;
  let skipped = 0;
  let errors = 0;

  for (const profile of profiles) {
    const survey = profile.survey as any;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º: –µ—Å—Ç—å –ª–∏ email –≤ –ø–æ–ª–µ name
    if (profile.name && profile.name.includes('@')) {
      const realName = survey?.real_name;
      
      if (realName && realName !== profile.name) {
        console.log(`\nüîÑ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å: ${profile.id}`);
        console.log(`   User: ${profile.user_identifier}`);
        console.log(`   Course: ${profile.course_slug}`);
        console.log(`   –ë—ã–ª–æ: "${profile.name}"`);
        console.log(`   –°—Ç–∞–Ω–µ—Ç: "${realName}"`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º
        const { error: updateError } = await supabase
          .from('profiles')
          .update({ name: realName })
          .eq('id', profile.id);

        if (updateError) {
          console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${updateError.message}`);
          errors++;
        } else {
          console.log(`   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ`);
          fixed++;
        }
      } else {
        console.log(`\n‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å: ${profile.id}`);
        console.log(`   –ü—Ä–∏—á–∏–Ω–∞: survey.real_name –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å email`);
        skipped++;
      }
    }
  }

  console.log('\n' + '='.repeat(60));
  console.log('\nüìä –ò–¢–û–ì–ò:\n');
  console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: ${fixed}`);
  console.log(`‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skipped}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${errors}`);
  console.log('');
}

main().catch(console.error);
