import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);

async function checkUser(userId: string) {
  const { data: profiles } = await supabase
    .from('profiles')
    .select('*')
    .eq('user_identifier', userId)
    .order('created_at', { ascending: false });

  if (!profiles || profiles.length === 0) {
    console.log(`‚ùå –ü—Ä–æ—Ñ–∏–ª–∏ –¥–ª—è user ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
    return;
  }

  console.log(`\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userId}`);
  console.log(`–ü—Ä–æ—Ñ–∏–ª–µ–π –Ω–∞–π–¥–µ–Ω–æ: ${profiles.length}\n`);

  profiles.forEach((p, i) => {
    const survey = p.survey as any;
    console.log(`\nüìã –ü—Ä–æ—Ñ–∏–ª—å ${i + 1}:`);
    console.log('   ID:', p.id);
    console.log('   –ö—É—Ä—Å:', p.course_slug);
    console.log('   –°–æ–∑–¥–∞–Ω:', p.created_at);
    console.log('   name:', JSON.stringify(p.name));
    console.log('   survey.real_name:', JSON.stringify(survey?.real_name));
    console.log('   survey.uid:', JSON.stringify(survey?.uid));
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∏
    if (!p.name) {
      console.log('   ‚ö†Ô∏è  name = NULL!');
    } else if (p.name.includes('@')) {
      console.log('   ‚ùå name —Å–æ–¥–µ—Ä–∂–∏—Ç EMAIL!');
    } else {
      console.log('   ‚úÖ name –≤—ã–≥–ª—è–¥–∏—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ');
    }
    
    if (survey?.real_name && p.name !== survey.real_name) {
      console.log(`   üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å: name = "${survey.real_name}"`);
    }
  });
}

async function main() {
  console.log('üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô\n');
  console.log('='.repeat(60));
  
  await checkUser('469887216');
  
  console.log('\n' + '='.repeat(60));
  
  await checkUser('test@example.com');
  
  console.log('\n' + '='.repeat(60));
  
  await checkUser('987654321');
  
  console.log('\n');
}

main().catch(e => {
  console.error('–û—à–∏–±–∫–∞:', e);
  process.exit(1);
});
