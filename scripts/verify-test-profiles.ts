import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);

async function main() {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê –¢–ï–°–¢–û–í–´–• –ü–†–û–§–ò–õ–ï–ô\n');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: Email –≤ user_identifier
  console.log('=== –¢–ï–°–¢ 1: Email –∫–∞–∫ user_identifier ===');
  const { data: profile1, error: error1 } = await supabase
    .from('profiles')
    .select('user_identifier, name, course_slug, survey')
    .eq('user_identifier', 'test@example.com')
    .eq('course_slug', 'taping-basics')
    .maybeSingle();

  if (error1) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error1.message);
  } else if (!profile1) {
    console.log('‚ö†Ô∏è  –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
  } else {
    console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω:');
    console.log('   user_identifier:', profile1.user_identifier);
    console.log('   name:', profile1.name);
    console.log('   survey.real_name:', (profile1.survey as any)?.real_name);
    
    if (profile1.name === '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å') {
      console.log('   ‚úÖ –ò–ú–Ø –ó–ê–ü–ò–°–ê–ù–û –ü–†–ê–í–ò–õ–¨–ù–û!');
    } else {
      console.log('   ‚ùå –ò–ú–Ø –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û–ï! –û–∂–∏–¥–∞–ª–æ—Å—å: "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"');
    }
  }
  
  console.log('');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –û–±—ã—á–Ω—ã–π ID
  console.log('=== –¢–ï–°–¢ 2: –û–±—ã—á–Ω—ã–π user ID ===');
  const { data: profile2, error: error2 } = await supabase
    .from('profiles')
    .select('user_identifier, name, course_slug, survey')
    .eq('user_identifier', '987654321')
    .eq('course_slug', 'taping-basics')
    .maybeSingle();

  if (error2) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error2.message);
  } else if (!profile2) {
    console.log('‚ö†Ô∏è  –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
  } else {
    console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω:');
    console.log('   user_identifier:', profile2.user_identifier);
    console.log('   name:', profile2.name);
    console.log('   survey.real_name:', (profile2.survey as any)?.real_name);
    
    if (profile2.name === '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤') {
      console.log('   ‚úÖ –ò–ú–Ø –ó–ê–ü–ò–°–ê–ù–û –ü–†–ê–í–ò–õ–¨–ù–û!');
    } else {
      console.log('   ‚ùå –ò–ú–Ø –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û–ï! –û–∂–∏–¥–∞–ª–æ—Å—å: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"');
    }
  }
  
  console.log('');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –†–µ–∞–ª—å–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 469887216
  console.log('=== –†–ï–ê–õ–¨–ù–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: 469887216 ===');
  const { data: profiles, error: error3 } = await supabase
    .from('profiles')
    .select('id, user_identifier, name, course_slug, survey, created_at')
    .eq('user_identifier', '469887216')
    .order('created_at', { ascending: false });

  if (error3) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error3.message);
  } else if (!profiles || profiles.length === 0) {
    console.log('‚ö†Ô∏è  –ü—Ä–æ—Ñ–∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  } else {
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: ${profiles.length}`);
    profiles.forEach((p, i) => {
      const survey = p.survey as any;
      console.log(`\n–ü—Ä–æ—Ñ–∏–ª—å ${i + 1}:`);
      console.log('   ID:', p.id);
      console.log('   Course:', p.course_slug);
      console.log('   Created:', p.created_at);
      console.log('   name:', p.name);
      console.log('   survey.real_name:', survey?.real_name);
      
      if (p.name?.includes('@')) {
        console.log('   ‚ö†Ô∏è  –í –ø–æ–ª–µ name –∑–∞–ø–∏—Å–∞–Ω EMAIL –≤–º–µ—Å—Ç–æ –∏–º–µ–Ω–∏!');
        console.log(`   üí° –ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å: name = "${survey?.real_name || '–ü–æ–ª–∏–Ω–∞'}"`);
      } else if (p.name === survey?.real_name) {
        console.log('   ‚úÖ name —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å survey.real_name');
      } else {
        console.log('   ‚ö†Ô∏è  name –ù–ï —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å survey.real_name');
      }
    });
  }
  
  console.log('\n' + '='.repeat(60));
  console.log('\nüìä –í–´–í–û–î–´:\n');
  console.log('1. API /api/survey –ü–†–ê–í–ò–õ–¨–ù–û —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç name –∏–∑ –ø–æ–ª—è real_name');
  console.log('2. –ï—Å–ª–∏ –≤ –±–∞–∑–µ –µ—Å—Ç—å email –≤–º–µ—Å—Ç–æ –∏–º–µ–Ω–∏ - —ç—Ç–æ –±—ã–ª–æ –∑–∞–ø–∏—Å–∞–Ω–æ –î–û –Ω–∞—à–µ–≥–æ –∫–æ–¥–∞');
  console.log('3. –ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –≤—Ä—É—á–Ω—É—é –∏–ª–∏ —á–µ—Ä–µ–∑ –º–∏–≥—Ä–∞—Ü–∏—é');
  console.log('');
}

main().catch(console.error);
