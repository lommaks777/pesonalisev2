#!/usr/bin/env node
/**
 * Update profile with course_id
 */

import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);

async function updateProfile(userId: string) {
  console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}...\n`);

  // 1. Get course_id for kinesio2
  const { data: course } = await supabase
    .from('courses')
    .select('id, slug')
    .eq('slug', 'kinesio2')
    .single();

  if (!course) {
    console.error('‚ùå –ö—É—Ä—Å kinesio2 –Ω–µ –Ω–∞–π–¥–µ–Ω');
    process.exit(1);
  }

  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –∫—É—Ä—Å: ${course.slug}`);
  console.log(`   Course ID: ${course.id}\n`);

  // 2. Update profile with course_id
  const { data: updatedProfile, error } = await supabase
    .from('profiles')
    .update({ course_id: course.id })
    .eq('user_identifier', userId)
    .select()
    .single();

  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', error);
    process.exit(1);
  }

  console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω!');
  console.log(`   Profile ID: ${updatedProfile.id}`);
  console.log(`   User: ${updatedProfile.name}`);
  console.log(`   Course ID: ${updatedProfile.course_id}`);
  console.log(`   Course Slug: ${updatedProfile.course_slug}\n`);
  console.log('‚ú® –¢–µ–ø–µ—Ä—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å!');
}

const userId = process.argv[2];

if (!userId) {
  console.error('‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
  console.error('   npx tsx --env-file=.env.local scripts/update-profile-course.ts <userId>');
  process.exit(1);
}

updateProfile(userId);
