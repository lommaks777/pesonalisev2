import "dotenv/config";
import { createClient } from '@supabase/supabase-js';
import OpenAI from "openai";
import fs from "fs";
import path from "path";

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl) {
  console.error('‚ùå NEXT_PUBLIC_SUPABASE_URL –Ω–µ –∑–∞–¥–∞–Ω');
  process.exit(1);
}

const supabaseKey = supabaseServiceKey || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseKey) {
  console.error('‚ùå SUPABASE_SERVICE_ROLE_KEY –∏–ª–∏ NEXT_PUBLIC_SUPABASE_ANON_KEY –Ω–µ –∑–∞–¥–∞–Ω');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function updateUserPersonalizations(userId: string) {
  console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}...`);

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: profile, error: profileError } = await supabase
      .from("profiles")
      .select("id, name, survey")
      .eq("user_identifier", userId)
      .single();

    if (profileError || !profile) {
      console.error(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω:`, profileError?.message);
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å: ${profile.name}`);

    // 2. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Ä–æ–∫–∏
    const { data: lessons, error: lessonsError } = await supabase
      .from("lessons")
      .select("id, lesson_number, title")
      .order("lesson_number", { ascending: true });

    if (lessonsError || !lessons) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—Ä–æ–∫–æ–≤:", lessonsError?.message);
      return;
    }

    console.log(`üìö –ù–∞–π–¥–µ–Ω–æ ${lessons.length} —É—Ä–æ–∫–æ–≤`);

    // 3. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
    const { error: deleteError } = await supabase
      .from("personalized_lesson_descriptions")
      .delete()
      .eq("profile_id", profile.id);

    if (deleteError) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–π:", deleteError.message);
    } else {
      console.log("üóëÔ∏è –°—Ç–∞—Ä—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã");
    }

    // 4. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
    const results = [];
    for (const lesson of lessons) {
      console.log(`üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è —É—Ä–æ–∫–∞ ${lesson.lesson_number}...`);
      
      try {
        const personalization = await generateTemplatePersonalization(
          profile.survey,
          lesson,
          profile.name
        );

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é
        const { error: saveError } = await supabase
          .from("personalized_lesson_descriptions")
          .insert({
            profile_id: profile.id,
            lesson_id: lesson.id,
            content: personalization,
          });

        if (saveError) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —É—Ä–æ–∫–∞ ${lesson.lesson_number}:`, saveError.message);
          results.push({ lessonNumber: lesson.lesson_number, success: false });
        } else {
          console.log(`‚úÖ –£—Ä–æ–∫ ${lesson.lesson_number} –æ–±–Ω–æ–≤–ª–µ–Ω`);
          results.push({ lessonNumber: lesson.lesson_number, success: true });
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É—Ä–æ–∫–∞ ${lesson.lesson_number}:`, error);
        results.push({ lessonNumber: lesson.lesson_number, success: false });
      }
    }

    const successCount = results.filter(r => r.success).length;
    console.log(`\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –£—Å–ø–µ—à–Ω–æ: ${successCount}/${lessons.length}`);

    if (successCount < lessons.length) {
      console.log("‚ùå –ù–µ—É–¥–∞—á–Ω—ã–µ —É—Ä–æ–∫–∏:");
      results.filter(r => !r.success).forEach(r => {
        console.log(`  - –£—Ä–æ–∫ ${r.lessonNumber}`);
      });
    }

  } catch (error) {
    console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error);
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≥–æ—Ç–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
 */
async function generateTemplatePersonalization(
  surveyData: any,
  lesson: { lesson_number: number; title: string },
  userName: string
): Promise<Record<string, unknown>> {
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω —É—Ä–æ–∫–∞
  const templatePath = path.join(process.cwd(), 'store', 'shvz', `${lesson.lesson_number}-${lesson.lesson_number}-${getLessonId(lesson.lesson_number)}-final.json`);
  
  let template: any = {};
  
  if (fs.existsSync(templatePath)) {
    try {
      template = JSON.parse(fs.readFileSync(templatePath, 'utf8'));
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —É—Ä–æ–∫–∞ ${lesson.lesson_number}:`, error);
    }
  }

  // –ï—Å–ª–∏ —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
  if (!template.summary_short) {
    template = {
      summary_short: `–£—Ä–æ–∫ ${lesson.lesson_number}: ${lesson.title}`,
      why_watch: "–≠—Ç–æ—Ç —É—Ä–æ–∫ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Å–≤–æ–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –º–∞—Å—Å–∞–∂–∞",
      quick_action: "–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ —É—Ä–æ–∫–∞ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ",
      social_share: "–ò–∑—É—á–∞—é –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –º–∞—Å—Å–∞–∂–∞!",
      homework_20m: "–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ —É—Ä–æ–∫–∞ –∏ –ø–æ–ø—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å 10-15 –º–∏–Ω—É—Ç"
    };
  }

  const prompt = `–¢—ã - –æ–ø—ã—Ç–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –º–∞—Å—Å–∞–∂–∞ –ê–Ω–∞—Å—Ç–∞—Å–∏—è –§–æ–º–∏–Ω–∞. –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–π –≥–æ—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω —É—Ä–æ–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∫–µ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–∞.

–®–ê–ë–õ–û–ù –£–†–û–ö–ê:
${JSON.stringify(template, null, 2)}

–ê–ù–ö–ï–¢–ê –°–¢–£–î–ï–ù–¢–ê:
- –ò–º—è: ${userName}
- –ú–æ—Ç–∏–≤–∞—Ü–∏—è: ${surveyData.motivation?.join(", ") || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
- –¶–µ–ª–µ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã: ${surveyData.target_clients || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
- –ñ–µ–ª–∞–µ–º—ã–µ –Ω–∞–≤—ã–∫–∏: ${surveyData.skills_wanted || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
- –°—Ç—Ä–∞—Ö–∏/–æ–ø–∞—Å–µ–Ω–∏—è: ${surveyData.fears?.join(", ") || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
- –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${surveyData.wow_result || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
- –ú–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏: ${surveyData.practice_model || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}

–ó–ê–î–ê–ù–ò–ï:
–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —à–∞–±–ª–æ–Ω–∞, —É—á–∏—Ç—ã–≤–∞—è:
1. –û–±—Ä–∞—â–∞–π—Å—è –∫ —Å—Ç—É–¥–µ–Ω—Ç—É –ø–æ –∏–º–µ–Ω–∏
2. –£—á–∏—Ç—ã–≤–∞–π –µ–≥–æ –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏ —Ü–µ–ª–∏
3. –ê–¥—Ä–µ—Å—É–π –µ–≥–æ —Å—Ç—Ä–∞—Ö–∏ –∏ –æ–ø–∞—Å–µ–Ω–∏—è
4. –ê–¥–∞–ø—Ç–∏—Ä—É–π –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ–¥ –µ–≥–æ –º–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏
5. –°–≤—è–∑—ã–≤–∞–π —Å –µ–≥–æ –æ–∂–∏–¥–∞–µ–º—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (JSON):
{
  "summary_short": "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
  "why_watch": "–ó–∞—á–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç–æ—Ç —É—Ä–æ–∫ —Å —É—á–µ—Ç–æ–º –º–æ—Ç–∏–≤–∞—Ü–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞",
  "quick_action": "–ë—ã—Å—Ç—Ä–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å —É—á–µ—Ç–æ–º –º–æ–¥–µ–ª–∏ –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏",
  "social_share": "–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π",
  "homework_20m": "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ 20 –º–∏–Ω—É—Ç"
}

–û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–º JSON, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.`;

  try {
    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: "–¢—ã - –æ–ø—ã—Ç–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –º–∞—Å—Å–∞–∂–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≥–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã —É—Ä–æ–∫–æ–≤. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–º JSON.",
        },
        {
          role: "user",
          content: prompt,
        },
      ],
      temperature: 0.7,
      max_tokens: 1000,
    });

    const content = completion.choices[0]?.message?.content || "{}";
    return JSON.parse(content);
  } catch (error) {
    console.error("OpenAI API error:", error);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω –ø—Ä–∏ –æ—à–∏–±–∫–µ
    return template;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç ID —É—Ä–æ–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–∞
 */
function getLessonId(lessonNumber: number): string {
  const lessonIds: Record<number, string> = {
    1: "1-f9b62dc5-9b76-491d-8b9b-2b72411df740",
    2: "c8a90762-6fca-47a8-80c3-5f454ae05273",
    3: "1c75e3db-9afd-4237-8b8f-16be2b00ae0c",
    4: "61b19549-d1bf-4265-bb1e-ff21ae7891a0",
    5: "5-387be494-dcf4-41a0-83c2-380fdd4f4cc1",
    6: "6-913d5be1-bbfb-4d32-b4d2-157d10551389",
    7: "7-e0f961c1-b8e3-4f57-939d-fb188d2703a9",
    8: "722e1278-2dcf-4e76-baa3-8d674f3abda4",
    9: "56766339-03e0-4c1b-9d99-cc49590ad3fd",
    10: "10-69b9560e-2af2-4690-af44-1398ace0f75e",
    11: "11-8227a790-17ef-489a-8538-afbe2c4c10ce",
    12: "12-26ef3e23-3d2e-4461-80bf-622f26737528",
  };
  
  return lessonIds[lessonNumber] || "";
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
const userId = process.argv[2] || "21179358";
updateUserPersonalizations(userId).catch(console.error);
