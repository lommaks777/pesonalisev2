#!/usr/bin/env tsx
import { config } from 'dotenv';
import { resolve } from 'path';

// Load environment variables from .env.local
config({ path: resolve(process.cwd(), '.env.local') });
import { createClient } from '@supabase/supabase-js';
import { getOpenAIClient } from "../lib/services/openai";

interface SurveyData {
  motivation?: string[];
  target_clients?: string;
  skills_wanted?: string;
  fears?: string[];
  wow_result?: string;
  practice_model?: string;
}

interface LessonMetadata {
  lesson_number: number;
  title: string;
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl) {
  console.error('‚ùå NEXT_PUBLIC_SUPABASE_URL –Ω–µ –∑–∞–¥–∞–Ω');
  process.exit(1);
}

const supabaseKey = supabaseServiceKey || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseKey) {
  console.error('‚ùå SUPABASE_SERVICE_ROLE_KEY –∏–ª–∏ NEXT_PUBLIC_SUPABASE_ANON_KEY –Ω–µ –∑–∞–¥–∞–Ω');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function generatePersonalizedDescription(
  transcript: string,
  lessonMetadata: LessonMetadata,
  survey: SurveyData,
  userName: string
): Promise<any> {
  const openai = getOpenAIClient();

  const prompt = `–¢—ã - –æ–ø—ã—Ç–Ω—ã–π –º–µ—Ç–æ–¥–æ–ª–æ–≥ –∫—É—Ä—Å–∞ –º–∞—Å—Å–∞–∂–∞ –∏ –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞—Ç—å –ì–õ–£–ë–û–ö–û –ü–ï–†–°–û–ù–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–û–ï –æ–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª–Ω–æ–π —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –≤–∏–¥–µ–æ –∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∞–Ω–∫–µ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–∞.

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –£–†–û–ö–ï:
–ù–æ–º–µ—Ä —É—Ä–æ–∫–∞: ${lessonMetadata.lesson_number}
–ù–∞–∑–≤–∞–Ω–∏–µ: ${lessonMetadata.title}

–ü–û–õ–ù–ê–Ø –†–ê–°–®–ò–§–†–û–í–ö–ê –£–†–û–ö–ê (${transcript.length} —Å–∏–º–≤–æ–ª–æ–≤):
${transcript.substring(0, 15000)}${transcript.length > 15000 ? "..." : ""}

–ê–ù–ö–ï–¢–ê –°–¢–£–î–ï–ù–¢–ê:
- –ò–º—è: ${userName}
- –ú–æ—Ç–∏–≤–∞—Ü–∏—è: ${survey.motivation?.join(", ") || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
- –¶–µ–ª–µ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã: ${survey.target_clients || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
- –ñ–µ–ª–∞–µ–º—ã–µ –Ω–∞–≤—ã–∫–∏: ${survey.skills_wanted || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
- –°—Ç—Ä–∞—Ö–∏/–æ–ø–∞—Å–µ–Ω–∏—è: ${survey.fears?.join(", ") || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
- –ñ–µ–ª–∞–µ–º—ã–π wow-—Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${survey.wow_result || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}
- –ú–æ–¥–µ–ª—å –ø—Ä–∞–∫—Ç–∏–∫–∏: ${survey.practice_model || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}

–ó–ê–î–ê–ù–ò–ï:
–°–æ–∑–¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–æ–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ö–û–ù–ö–†–ï–¢–ù–£–Æ –¶–ï–ù–ù–û–°–¢–¨ –¥–ª—è –≠–¢–û–ì–û —Å—Ç—É–¥–µ–Ω—Ç–∞.

–°–¢–†–£–ö–¢–£–†–ê –û–ü–ò–°–ê–ù–ò–Ø (7 —Ä–∞–∑–¥–µ–ª–æ–≤):

1. **introduction** (–í–≤–µ–¥–µ–Ω–∏–µ): 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
2. **why_it_matters_for_you** (–ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ –∏–º–µ–Ω–Ω–æ –¥–ª—è –≤–∞—Å): 4-5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
3. **key_takeaways** (–ö–ª—é—á–µ–≤—ã–µ –≤—ã–≤–æ–¥—ã): –ú–∞—Å—Å–∏–≤ –∏–∑ 3-4 –ø—É–Ω–∫—Ç–æ–≤
4. **practical_application** (–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ): 3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
5. **addressing_fears** (–û—Ç–≤–µ—Ç –Ω–∞ –æ–ø–∞—Å–µ–Ω–∏—è): 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
6. **personalized_homework** (–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ): 2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
7. **motivational_quote** (–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ—Ä–∞–∑–∞): 1 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (—Å—Ç—Ä–æ–≥–æ JSON):
{
  "introduction": "—Å—Ç—Ä–æ–∫–∞",
  "why_it_matters_for_you": "—Å—Ç—Ä–æ–∫–∞",
  "key_takeaways": ["–ø—É–Ω–∫—Ç 1", "–ø—É–Ω–∫—Ç 2", "–ø—É–Ω–∫—Ç 3"],
  "practical_application": "—Å—Ç—Ä–æ–∫–∞",
  "addressing_fears": "—Å—Ç—Ä–æ–∫–∞",
  "personalized_homework": "—Å—Ç—Ä–æ–∫–∞",
  "motivational_quote": "—Å—Ç—Ä–æ–∫–∞"
}

–û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–º JSON –±–µ–∑ markdown-—Ä–∞–∑–º–µ—Ç–∫–∏ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.`;

  try {
    const completion = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [
        {
          role: "system",
          content: "–¢—ã - –æ–ø—ã—Ç–Ω—ã–π –º–µ—Ç–æ–¥–æ–ª–æ–≥ –∫—É—Ä—Å–∞ –º–∞—Å—Å–∞–∂–∞ –∏ –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä. –°–æ–∑–¥–∞—ë—à—å –≥–ª—É–±–æ–∫–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è —É—Ä–æ–∫–æ–≤. –û—Ç–≤–µ—á–∞–µ—à—å —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–º JSON.",
        },
        {
          role: "user",
          content: prompt,
        },
      ],
      temperature: 0.7,
      max_tokens: 2500,
      response_format: { type: "json_object" },
    });

    const content = completion.choices[0]?.message?.content || "{}";
    let cleanContent = content.trim();
    if (cleanContent.startsWith('```json')) {
      cleanContent = cleanContent.replace(/^```json\s*/, '').replace(/\s*```$/, '');
    }
    if (cleanContent.startsWith('```')) {
      cleanContent = cleanContent.replace(/^```\s*/, '').replace(/\s*```$/, '');
    }

    return JSON.parse(cleanContent);
  } catch (error) {
    console.error("Error generating personalization:", error);
    throw error;
  }
}

async function updateUserPersonalizations(userId: string) {
  console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}...`);

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: profile, error: profileError } = await supabase
      .from("profiles")
      .select("id, name, survey, course_slug")
      .eq("user_identifier", userId)
      .maybeSingle();

    if (profileError || !profile) {
      console.error(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω:`, profileError?.message);
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å: ${profile.name} (–∫—É—Ä—Å: ${profile.course_slug})`);

    // 2. –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å ID
    const { data: course } = await supabase
      .from("courses")
      .select("id")
      .eq("slug", profile.course_slug)
      .single();

    if (!course) {
      console.error(`‚ùå –ö—É—Ä—Å ${profile.course_slug} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }

    // 3. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Ä–æ–∫–∏ –∫—É—Ä—Å–∞ —Å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞–º–∏
    const { data: lessons, error: lessonsError } = await supabase
      .from("lessons")
      .select("id, lesson_number, title, content")
      .eq("course_id", course.id)
      .order("lesson_number", { ascending: true });

    if (lessonsError || !lessons) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—Ä–æ–∫–æ–≤:", lessonsError?.message);
      return;
    }

    console.log(`üìö –ù–∞–π–¥–µ–Ω–æ ${lessons.length} —É—Ä–æ–∫–æ–≤`);

    // 4. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
    const { error: deleteError } = await supabase
      .from("personalizations")
      .delete()
      .eq("profile_id", profile.id);

    if (deleteError) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–π:", deleteError.message);
    } else {
      console.log("üóëÔ∏è –°—Ç–∞—Ä—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã");
    }

    // 5. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —Å –ù–û–í–´–ú –¥–≤–∏–∂–∫–æ–º (–ø—Ä—è–º–æ –∏–∑ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–æ–∫)
    const results = [];
    for (const lesson of lessons) {
      console.log(`üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è —É—Ä–æ–∫–∞ ${lesson.lesson_number}...`);
      
      try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        const transcriptData = lesson.content as any;
        
        if (!transcriptData || !transcriptData.transcription) {
          console.warn(`‚ö†Ô∏è  –ù–µ—Ç —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –¥–ª—è —É—Ä–æ–∫–∞ ${lesson.lesson_number}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
          results.push({ lessonNumber: lesson.lesson_number, success: false });
          continue;
        }
        
        const lessonMetadata: LessonMetadata = {
          lesson_number: lesson.lesson_number,
          title: lesson.title,
        };
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ —Å GPT-4o
        const personalization = await generatePersonalizedDescription(
          transcriptData.transcription,
          lessonMetadata,
          profile.survey as SurveyData,
          profile.name
        );

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é
        const { error: saveError } = await supabase
          .from("personalizations")
          .insert({
            profile_id: profile.id,
            lesson_id: lesson.id,
            content: personalization,
          });

        if (saveError) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —É—Ä–æ–∫–∞ ${lesson.lesson_number}:`, saveError.message);
          results.push({ lessonNumber: lesson.lesson_number, success: false });
        } else {
          console.log(`‚úÖ –£—Ä–æ–∫ ${lesson.lesson_number} –æ–±–Ω–æ–≤–ª—ë–Ω (–ù–û–í–´–ô –¥–≤–∏–∂–æ–∫: –ø—Ä—è–º–æ –∏–∑ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏)`);
          results.push({ lessonNumber: lesson.lesson_number, success: true });
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É—Ä–æ–∫–∞ ${lesson.lesson_number}:`, error);
        results.push({ lessonNumber: lesson.lesson_number, success: false });
      }
    }

    const successCount = results.filter(r => r.success).length;
    console.log(`\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –£—Å–ø–µ—à–Ω–æ: ${successCount}/${lessons.length}`);

    if (successCount < lessons.length) {
      console.log("‚ùå –ù–µ—É–¥–∞—á–Ω—ã–µ —É—Ä–æ–∫–∏:");
      results.filter(r => !r.success).forEach(r => {
        console.log(`  - –£—Ä–æ–∫ ${r.lessonNumber}`);
      });
    }

  } catch (error) {
    console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
const userId = process.argv[2] || "21179358";
updateUserPersonalizations(userId).catch(console.error);
