/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã
 * –°–∏–º—É–ª–∏—Ä—É–µ—Ç —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –æ—Ç GetCourse
 */

const API_URL = 'http://localhost:3000/api/survey';

// –°—Ü–µ–Ω–∞—Ä–∏–π 1: GetCourse –ø–µ—Ä–µ–¥–∞—ë—Ç email –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π uid, –∞ –∏–º—è –≤ –∞–Ω–∫–µ—Ç–µ
async function testScenario1() {
  console.log('\n=== –¢–ï–°–¢ 1: Email –≤ UID, –∏–º—è –≤ –∞–Ω–∫–µ—Ç–µ ===\n');
  
  const surveyData = {
    uid: 'test@example.com',        // ‚Üê GetCourse –ø–µ—Ä–µ–¥–∞—ë—Ç email
    real_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',  // ‚Üê –ò–º—è –∏–∑ –∞–Ω–∫–µ—Ç—ã
    course: 'taping-basics',
    motivation: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
    fears: '–ù–µ—Ç —Å—Ç—Ä–∞—Ö–æ–≤',
    target_clients: '–¢–µ—Å—Ç–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã',
    skills_wanted: '–¢–µ—Å—Ç–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏',
    practice_model: '—Ç–µ—Å—Ç–æ–≤–∞—è –º–æ–¥–µ–ª—å',
    wow_result: '—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç'
  };
  
  console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:');
  console.log('  uid:', surveyData.uid);
  console.log('  real_name:', surveyData.real_name);
  console.log('');
  
  try {
    const response = await fetch(API_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(surveyData)
    });
    
    const result = await response.json();
    
    console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:');
    console.log('  Status:', response.status);
    console.log('  Success:', result.success);
    console.log('  Profile ID:', result.profileId);
    console.log('  User Identifier:', result.userIdentifier);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–ø–∏—Å–∞–ª–æ—Å—å –≤ –±–∞–∑—É
    if (result.profileId) {
      console.log('\n‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω');
      console.log('–û–∂–∏–¥–∞–µ–º:');
      console.log('  user_identifier: "test@example.com"');
      console.log('  name: "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"');
    }
    
    return result.profileId;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    return null;
  }
}

// –°—Ü–µ–Ω–∞—Ä–∏–π 2: –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º ID
async function testScenario2() {
  console.log('\n=== –¢–ï–°–¢ 2: –ù–æ—Ä–º–∞–ª—å–Ω—ã–π user ID ===\n');
  
  const surveyData = {
    uid: '987654321',
    real_name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
    course: 'taping-basics',
    motivation: '–û–±—É—á–µ–Ω–∏–µ',
    fears: '–û—à–∏–±–∫–∏',
    target_clients: '–í—Å–µ',
    skills_wanted: '–í—Å–µ',
    practice_model: '–¥—Ä—É–≥',
    wow_result: '–æ—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç'
  };
  
  console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:');
  console.log('  uid:', surveyData.uid);
  console.log('  real_name:', surveyData.real_name);
  console.log('');
  
  try {
    const response = await fetch(API_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(surveyData)
    });
    
    const result = await response.json();
    
    console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:');
    console.log('  Status:', response.status);
    console.log('  Success:', result.success);
    console.log('  Profile ID:', result.profileId);
    console.log('  User Identifier:', result.userIdentifier);
    
    if (result.profileId) {
      console.log('\n‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω');
      console.log('–û–∂–∏–¥–∞–µ–º:');
      console.log('  user_identifier: "987654321"');
      console.log('  name: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"');
    }
    
    return result.profileId;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    return null;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∑–∞–ø–∏—Å–∞–ª–æ—Å—å –≤ –±–∞–∑—É
async function checkDatabase(profileId: string) {
  console.log(`\n=== –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• ===\n`);
  console.log(`Profile ID: ${profileId}`);
  console.log('');
  console.log('–í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –∑–∞–ø—Ä–æ—Å:');
  console.log(`SELECT user_identifier, name, course_slug, survey->>'real_name' as survey_name`);
  console.log(`FROM profiles WHERE id = '${profileId}';`);
  console.log('');
  console.log('–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç:');
  console.log(`npx tsx --env-file=.env.local -e "
import { createClient } from '@supabase/supabase-js';
const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);
const { data } = await supabase
  .from('profiles')
  .select('user_identifier, name, course_slug, survey')
  .eq('id', '${profileId}')
  .single();
console.log('user_identifier:', data.user_identifier);
console.log('name:', data.name);
console.log('survey.real_name:', data.survey?.real_name);
"`);
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
async function main() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–•–†–ê–ù–ï–ù–ò–Ø –ê–ù–ö–ï–¢–´\n');
  console.log('=' .repeat(60));
  
  const profileId1 = await testScenario1();
  
  console.log('\n' + '='.repeat(60));
  
  const profileId2 = await testScenario2();
  
  console.log('\n' + '='.repeat(60));
  
  if (profileId1) {
    await checkDatabase(profileId1);
  }
  
  console.log('\n' + '='.repeat(60));
  console.log('\n‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã\n');
}

main();
