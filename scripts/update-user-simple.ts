import "dotenv/config";
import { createClient } from '@supabase/supabase-js';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl) {
  console.error('‚ùå NEXT_PUBLIC_SUPABASE_URL –Ω–µ –∑–∞–¥–∞–Ω');
  process.exit(1);
}

const supabaseKey = supabaseServiceKey || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseKey) {
  console.error('‚ùå SUPABASE_SERVICE_ROLE_KEY –∏–ª–∏ NEXT_PUBLIC_SUPABASE_ANON_KEY –Ω–µ –∑–∞–¥–∞–Ω');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function updateUserPersonalizations(userId: string) {
  console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}...`);

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: profile, error: profileError } = await supabase
      .from("profiles")
      .select("id, name, survey")
      .eq("user_identifier", userId)
      .single();

    if (profileError || !profile) {
      console.error(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω:`, profileError?.message);
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å: ${profile.name}`);

    // 2. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Ä–æ–∫–∏
    const { data: lessons, error: lessonsError } = await supabase
      .from("lessons")
      .select("id, lesson_number, title")
      .order("lesson_number", { ascending: true });

    if (lessonsError || !lessons) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—Ä–æ–∫–æ–≤:", lessonsError?.message);
      return;
    }

    console.log(`üìö –ù–∞–π–¥–µ–Ω–æ ${lessons.length} —É—Ä–æ–∫–æ–≤`);

    // 3. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
    const { error: deleteError } = await supabase
      .from("personalized_lesson_descriptions")
      .delete()
      .eq("profile_id", profile.id);

    if (deleteError) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–π:", deleteError.message);
    } else {
      console.log("üóëÔ∏è –°—Ç–∞—Ä—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã");
    }

    // 4. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∫–µ—Ç—ã
    const results = [];
    for (const lesson of lessons) {
      console.log(`üîÑ –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è —É—Ä–æ–∫–∞ ${lesson.lesson_number}...`);
      
      try {
        // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∫–µ—Ç—ã
        const personalization = createBasicPersonalization(profile.survey, lesson, profile.name);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é
        const { error: saveError } = await supabase
          .from("personalized_lesson_descriptions")
          .insert({
            profile_id: profile.id,
            lesson_id: lesson.id,
            content: personalization,
          });

        if (saveError) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —É—Ä–æ–∫–∞ ${lesson.lesson_number}:`, saveError.message);
          results.push({ lessonNumber: lesson.lesson_number, success: false });
        } else {
          console.log(`‚úÖ –£—Ä–æ–∫ ${lesson.lesson_number} –æ–±–Ω–æ–≤–ª–µ–Ω`);
          results.push({ lessonNumber: lesson.lesson_number, success: true });
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É—Ä–æ–∫–∞ ${lesson.lesson_number}:`, error);
        results.push({ lessonNumber: lesson.lesson_number, success: false });
      }
    }

    const successCount = results.filter(r => r.success).length;
    console.log(`\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –£—Å–ø–µ—à–Ω–æ: ${successCount}/${lessons.length}`);

    if (successCount < lessons.length) {
      console.log("‚ùå –ù–µ—É–¥–∞—á–Ω—ã–µ —É—Ä–æ–∫–∏:");
      results.filter(r => !r.success).forEach(r => {
        console.log(`  - –£—Ä–æ–∫ ${r.lessonNumber}`);
      });
    }

  } catch (error) {
    console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error);
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—É—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∫–µ—Ç—ã
 */
function createBasicPersonalization(
  surveyData: any,
  lesson: { lesson_number: number; title: string },
  userName: string
): Record<string, unknown> {
  const motivation = surveyData.motivation?.join(", ") || "–∏–∑—É—á–µ–Ω–∏–µ –º–∞—Å—Å–∞–∂–∞";
  const targetClients = surveyData.target_clients || "—Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã";
  const skillsWanted = surveyData.skills_wanted || "—Ç–µ—Ö–Ω–∏–∫–∏ –º–∞—Å—Å–∞–∂–∞";
  const fears = surveyData.fears?.join(", ") || "–Ω–µ —É–∫–∞–∑–∞–Ω—ã";
  const wowResult = surveyData.wow_result || "—É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–æ–≤";
  const practiceModel = surveyData.practice_model || "—Å–µ–º—å—è –∏ –¥—Ä—É–∑—å—è";

  return {
    summary_short: `–ü—Ä–∏–≤–µ—Ç, ${userName}! –≠—Ç–æ—Ç —É—Ä–æ–∫ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Å–≤–æ–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –º–∞—Å—Å–∞–∂–∞.`,
    prev_lessons: lesson.lesson_number === 1 
      ? "–≠—Ç–æ –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫ –∫—É—Ä—Å–∞" 
      : `–ú—ã –∏–∑—É—á–∏–ª–∏ –æ—Å–Ω–æ–≤—ã –º–∞—Å—Å–∞–∂–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Ä–æ–∫–∞—Ö. –í–∞—à–∞ –º–æ—Ç–∏–≤–∞—Ü–∏—è: ${motivation}`,
    why_watch: `–≠—Ç–æ—Ç —É—Ä–æ–∫ –≤–∞–∂–µ–Ω –¥–ª—è –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π: ${wowResult}. –í—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è —Å ${practiceModel}.`,
    quick_action: `–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ —É—Ä–æ–∫–∞ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ, —É—á–∏—Ç—ã–≤–∞—è –≤–∞—à–∏ —Ü–µ–ª–∏: ${skillsWanted}`,
    social_share: `–ò–∑—É—á–∞—é –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –º–∞—Å—Å–∞–∂–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å ${targetClients}!`,
    homework_20m: `1. –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ —É—Ä–æ–∫–∞. 2. –ü–æ–ø—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å —Å ${practiceModel}. 3. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ ${skillsWanted}. 4. –ó–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è.`
  };
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
const userId = process.argv[2] || "21179358";
updateUserPersonalizations(userId).catch(console.error);
