import { NextRequest, NextResponse } from "next/server";
import { createSupabaseServerClient } from "@/lib/supabase/server";

interface BlockRequest {
  user_id: string;
  lesson: string; // lesson slug
  title: string;
  flush?: boolean; // –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫—ç—à
}

/**
 * POST /api/persona/block
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –±–ª–æ–∫ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º —É—Ä–æ–∫–∞
 */
export async function POST(request: NextRequest) {
  // –î–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
  const corsHeaders = {
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Methods': 'POST, OPTIONS',
    'Access-Control-Allow-Headers': 'Content-Type',
  };

  try {
    const body: BlockRequest = await request.json();
    const { user_id, lesson, title, flush } = body;

    if (!user_id || !lesson) {
      return NextResponse.json(
        { ok: false, error: "user_id and lesson are required" },
        { status: 400, headers: corsHeaders }
      );
    }

    const supabase = createSupabaseServerClient();

    // 1. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ user_identifier
    const { data: profile } = await supabase
      .from("profiles")
      .select("id, name")
      .eq("user_identifier", user_id)
      .maybeSingle();

    if (!profile) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª –∞–Ω–∫–µ—Ç—É - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
      return NextResponse.json({
        ok: true,
        html: `
          <div class="persona-block">
            <div class="persona-alert">
              <h3>üí° –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</h3>
              <p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞.</p>
              <a href="/survey/iframe?uid=${user_id}" class="persona-btn" target="_blank">
                –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É ‚Üí
              </a>
            </div>
          </div>
        `,
      }, { headers: corsHeaders });
    }

    // 2. –ü–æ–ª—É—á–∞–µ–º —É—Ä–æ–∫ –ø–æ slug (–∏—â–µ–º –≤ title –∏–ª–∏ –¥—Ä—É–≥–æ–º –ø–æ–ª–µ)
    // –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫: —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ, –∑–∞—Ç–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ
    let { data: lessonData } = await supabase
      .from("lessons")
      .select("id, title, lesson_number")
      .ilike("title", `%${lesson}%`)
      .limit(1)
      .maybeSingle();

    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é, –ø—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —É—Ä–æ–∫–∞
    if (!lessonData && /^\d+$/.test(lesson)) {
      const lessonNumber = parseInt(lesson);
      const { data: lessonByNumber } = await supabase
        .from("lessons")
        .select("id, title, lesson_number")
        .eq("lesson_number", lessonNumber)
        .limit(1)
        .maybeSingle();
      
      if (lessonByNumber) {
        lessonData = lessonByNumber;
      }
    }

    if (!lessonData) {
      return NextResponse.json({
        ok: true,
        html: `
          <div class="persona-block">
            <div class="persona-alert persona-warning">
              <p>–£—Ä–æ–∫ "${title}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.</p>
            </div>
          </div>
        `,
      }, { headers: corsHeaders });
    }

    // 3. –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞
    const { data: personalization } = await supabase
      .from("personalized_lesson_descriptions")
      .select("content")
      .eq("profile_id", profile.id)
      .eq("lesson_id", lessonData.id)
      .maybeSingle();

    if (!personalization || !personalization.content) {
      return NextResponse.json({
        ok: true,
        html: `
          <div class="persona-block">
            <div class="persona-alert">
              <h3>üìù –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</h3>
              <p>–î–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.</p>
              <a href="/survey/iframe?uid=${user_id}" class="persona-btn" target="_blank">
                –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É ‚Üí
              </a>
            </div>
          </div>
        `,
      }, { headers: corsHeaders });
    }

    // 4. –§–æ—Ä–º–∏—Ä—É–µ–º HTML –∏–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
    const content = personalization.content as Record<string, unknown>;
    const summaryShort = content.summary_short as string || "";
    const prevLessons = content.prev_lessons as string || "";
    const whyWatch = content.why_watch as string || "";
    const quickAction = content.quick_action as string || "";
    const socialShare = content.social_share as string || "";
    const homework20m = content.homework_20m as string || "";

    const html = `
      <div class="persona-block">
        ${summaryShort ? `
          <div class="persona-section">
            <h3 class="persona-section-title">üìù –û —É—Ä–æ–∫–µ</h3>
            <p class="persona-text">${summaryShort}</p>
          </div>
        ` : ''}

        ${prevLessons ? `
          <div class="persona-section">
            <h3 class="persona-section-title">üìö –ß—Ç–æ –º—ã –∏–∑—É—á–∏–ª–∏</h3>
            <p class="persona-text">${prevLessons}</p>
          </div>
        ` : ''}

        ${whyWatch ? `
          <div class="persona-section">
            <h3 class="persona-section-title">üéØ –ó–∞—á–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å</h3>
            <p class="persona-text">${whyWatch}</p>
          </div>
        ` : ''}

        ${quickAction ? `
          <div class="persona-section">
            <h3 class="persona-section-title">‚ö° –ë—ã—Å—Ç—Ä–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ</h3>
            <p class="persona-text">${quickAction}</p>
          </div>
        ` : ''}

        ${homework20m ? `
          <div class="persona-section persona-homework">
            <h3 class="persona-section-title">üìö –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ (20 –º–∏–Ω)</h3>
            <p class="persona-text">${homework20m}</p>
          </div>
        ` : ''}

        ${socialShare ? `
          <div class="persona-section persona-social">
            <h3 class="persona-section-title">üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è</h3>
            <p class="persona-text">${socialShare}</p>
          </div>
        ` : ''}
      </div>
    `;

    return NextResponse.json({
      ok: true,
      html: html,
      cached: !flush,
    }, { headers: corsHeaders });

  } catch (error) {
    console.error("Error in POST /api/persona/block:", error);
    return NextResponse.json(
      { ok: false, error: "Internal server error" },
      { status: 500, headers: corsHeaders }
    );
  }
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ OPTIONS –¥–ª—è CORS preflight
export async function OPTIONS() {
  return new NextResponse(null, {
    status: 200,
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'POST, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type',
    },
  });
}

