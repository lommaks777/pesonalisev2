import { NextRequest, NextResponse } from "next/server";
import { createSupabaseServerClient } from "@/lib/supabase/server";

export async function GET(request: NextRequest) {
  try {
    const supabase = createSupabaseServerClient();

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: profile } = await supabase
      .from("profiles")
      .select("id, name, user_identifier")
      .eq("user_identifier", "21179358")
      .single();

    if (!profile) {
      return NextResponse.json({ error: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Ä–æ–∫
    const { data: lesson } = await supabase
      .from("lessons")
      .select("id, title, lesson_number")
      .ilike("title", "%1 —É—Ä–æ–∫ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ%")
      .limit(1)
      .maybeSingle();

    if (!lesson) {
      return NextResponse.json({ error: "–£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é
    const { data: personalization } = await supabase
      .from("personalized_lesson_descriptions")
      .select("content")
      .eq("profile_id", profile.id)
      .eq("lesson_id", lesson.id)
      .single();

    if (!personalization) {
      return NextResponse.json({ error: "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" });
    }

    // 4. –§–æ—Ä–º–∏—Ä—É–µ–º HTML
    const content = personalization.content as Record<string, unknown>;
    const summaryShort = content.summary_short as string || "";
    const prevLessons = content.prev_lessons as string || "";
    const whyWatch = content.why_watch as string || "";
    const quickAction = content.quick_action as string || "";
    const socialShare = content.social_share as string || "";
    const homework20m = content.homework_20m as string || "";

    const html = `
      <div class="persona-block">
        ${summaryShort ? `
          <div class="persona-section">
            <h3 class="persona-section-title">üìù –û —É—Ä–æ–∫–µ</h3>
            <p class="persona-text">${summaryShort}</p>
          </div>
        ` : ''}

        ${prevLessons ? `
          <div class="persona-section">
            <h3 class="persona-section-title">üìö –ß—Ç–æ –º—ã –∏–∑—É—á–∏–ª–∏</h3>
            <p class="persona-text">${prevLessons}</p>
          </div>
        ` : ''}

        ${whyWatch ? `
          <div class="persona-section">
            <h3 class="persona-section-title">üéØ –ó–∞—á–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å</h3>
            <p class="persona-text">${whyWatch}</p>
          </div>
        ` : ''}

        ${quickAction ? `
          <div class="persona-section">
            <h3 class="persona-section-title">‚ö° –ë—ã—Å—Ç—Ä–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ</h3>
            <p class="persona-text">${quickAction}</p>
          </div>
        ` : ''}

        ${homework20m ? `
          <div class="persona-section persona-homework">
            <h3 class="persona-section-title">üìö –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ (20 –º–∏–Ω)</h3>
            <p class="persona-text">${homework20m}</p>
          </div>
        ` : ''}

        ${socialShare ? `
          <div class="persona-section persona-social">
            <h3 class="persona-section-title">üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è</h3>
            <p class="persona-text">${socialShare}</p>
          </div>
        ` : ''}
      </div>
    `;

    return NextResponse.json({
      ok: true,
      html: html,
      debug: {
        profile: profile.name,
        lesson: lesson.title,
        contentKeys: Object.keys(content),
        summaryShort: summaryShort,
        whyWatch: whyWatch
      }
    });

  } catch (error) {
    console.error("Debug API error:", error);
    return NextResponse.json({ error: "Internal server error" }, { status: 500 });
  }
}
