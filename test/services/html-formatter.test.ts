import { describe, it, expect } from 'vitest';
import { formatDefaultTemplateContent } from '@/lib/services/html-formatter';
import { LessonTemplate } from '@/lib/services/lesson-templates';

describe('formatDefaultTemplateContent', () => {
  it('should format complete template with all sections', () => {
    const template: LessonTemplate = {
      introduction: '–í–≤–µ–¥–µ–Ω–∏–µ –≤ —É—Ä–æ–∫',
      key_points: ['–ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç', '–í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç', '–¢—Ä–µ—Ç–∏–π –ø—É–Ω–∫—Ç', '–ß–µ—Ç–≤–µ—Ä—Ç—ã–π –ø—É–Ω–∫—Ç'],
      practical_tips: ['–°–æ–≤–µ—Ç 1', '–°–æ–≤–µ—Ç 2', '–°–æ–≤–µ—Ç 3'],
      important_notes: ['–í–∞–∂–Ω–æ–µ –∑–∞–º–µ—á–∞–Ω–∏–µ 1', '–í–∞–∂–Ω–æ–µ –∑–∞–º–µ—á–∞–Ω–∏–µ 2'],
      equipment_preparation: '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –∫–æ–≤—Ä–∏–∫ –∏ –ø–æ–ª–æ—Ç–µ–Ω—Ü–µ',
      homework: '–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ 15 –º–∏–Ω—É—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
      motivational_line: '–í—ã —Å–ø—Ä–∞–≤–∏—Ç–µ—Å—å!',
    };

    const lessonInfo = {
      lesson_number: 1,
      title: '–¢–µ—Å—Ç–æ–≤—ã–π —É—Ä–æ–∫',
    };

    const html = formatDefaultTemplateContent(template, lessonInfo, true);

    // Check that HTML contains all sections
    expect(html).toContain('–í–≤–µ–¥–µ–Ω–∏–µ');
    expect(html).toContain('–ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã');
    expect(html).toContain('–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã');
    expect(html).toContain('–í–∞–∂–Ω–æ');
    expect(html).toContain('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞');
    expect(html).toContain('–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ');
    
    // Check content is present
    expect(html).toContain('–í–≤–µ–¥–µ–Ω–∏–µ –≤ —É—Ä–æ–∫');
    expect(html).toContain('–ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç');
    expect(html).toContain('–°–æ–≤–µ—Ç 1');
    expect(html).toContain('–í–∞–∂–Ω–æ–µ –∑–∞–º–µ—á–∞–Ω–∏–µ 1');
    expect(html).toContain('–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –∫–æ–≤—Ä–∏–∫');
    expect(html).toContain('–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ 15 –º–∏–Ω—É—Ç');
    expect(html).toContain('–í—ã —Å–ø—Ä–∞–≤–∏—Ç–µ—Å—å!');
    
    // Check for default template indicator
    expect(html).toContain('persona-default');
    expect(html).toContain('–ë–∞–∑–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —É—Ä–æ–∫–∞');
  });

  it('should include survey CTA when includeSurveyCTA is true', () => {
    const template: LessonTemplate = {
      introduction: '–í–≤–µ–¥–µ–Ω–∏–µ',
      key_points: ['–ü—É–Ω–∫—Ç 1', '–ü—É–Ω–∫—Ç 2', '–ü—É–Ω–∫—Ç 3', '–ü—É–Ω–∫—Ç 4'],
      practical_tips: ['–°–æ–≤–µ—Ç 1', '–°–æ–≤–µ—Ç 2', '–°–æ–≤–µ—Ç 3'],
      homework: '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ',
      motivational_line: '–ú–æ—Ç–∏–≤–∞—Ü–∏—è',
    };

    const lessonInfo = { lesson_number: 1, title: '–£—Ä–æ–∫ 1' };
    const html = formatDefaultTemplateContent(template, lessonInfo, true);

    expect(html).toContain('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É');
    expect(html).toContain('/survey/iframe');
  });

  it('should exclude survey CTA when includeSurveyCTA is false', () => {
    const template: LessonTemplate = {
      introduction: '–í–≤–µ–¥–µ–Ω–∏–µ',
      key_points: ['–ü—É–Ω–∫—Ç 1', '–ü—É–Ω–∫—Ç 2', '–ü—É–Ω–∫—Ç 3', '–ü—É–Ω–∫—Ç 4'],
      practical_tips: ['–°–æ–≤–µ—Ç 1', '–°–æ–≤–µ—Ç 2', '–°–æ–≤–µ—Ç 3'],
      homework: '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ',
      motivational_line: '–ú–æ—Ç–∏–≤–∞—Ü–∏—è',
    };

    const lessonInfo = { lesson_number: 1, title: '–£—Ä–æ–∫ 1' };
    const html = formatDefaultTemplateContent(template, lessonInfo, false);

    expect(html).not.toContain('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É');
    expect(html).not.toContain('persona-default-header');
  });

  it('should handle minimal template with only required fields', () => {
    const template: LessonTemplate = {
      introduction: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤–≤–µ–¥–µ–Ω–∏–µ',
      key_points: ['–ü—É–Ω–∫—Ç 1', '–ü—É–Ω–∫—Ç 2', '–ü—É–Ω–∫—Ç 3', '–ü—É–Ω–∫—Ç 4'],
      practical_tips: ['–°–æ–≤–µ—Ç 1', '–°–æ–≤–µ—Ç 2', '–°–æ–≤–µ—Ç 3'],
      homework: '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ',
      motivational_line: '–ú–æ—Ç–∏–≤–∞—Ü–∏—è',
    };

    const lessonInfo = { lesson_number: 2, title: '–£—Ä–æ–∫ 2' };
    const html = formatDefaultTemplateContent(template, lessonInfo, false);

    expect(html).toContain('–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤–≤–µ–¥–µ–Ω–∏–µ');
    expect(html).toContain('–ü—É–Ω–∫—Ç 1');
    expect(html).toContain('–°–æ–≤–µ—Ç 1');
    expect(html).toContain('–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ');
    expect(html).toContain('–ú–æ—Ç–∏–≤–∞—Ü–∏—è');
    
    // Should not contain optional sections
    expect(html).not.toContain('–í–∞–∂–Ω–æ');
    expect(html).not.toContain('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞');
  });

  it('should escape HTML special characters', () => {
    const template: LessonTemplate = {
      introduction: '–í–≤–µ–¥–µ–Ω–∏–µ —Å <script>alert("xss")</script>',
      key_points: ['–ü—É–Ω–∫—Ç —Å <b>HTML</b>', '–ü—É–Ω–∫—Ç —Å & —Å–∏–º–≤–æ–ª–æ–º', '–ü—É–Ω–∫—Ç —Å "–∫–∞–≤—ã—á–∫–∞–º–∏"', '–ü—É–Ω–∫—Ç 4'],
      practical_tips: ["–°–æ–≤–µ—Ç —Å '–æ–¥–∏–Ω–∞—Ä–Ω—ã–º–∏'", '–°–æ–≤–µ—Ç 2', '–°–æ–≤–µ—Ç 3'],
      homework: '–ó–∞–¥–∞–Ω–∏–µ —Å > –∏ <',
      motivational_line: '–ú–æ—Ç–∏–≤–∞—Ü–∏—è & —É—Å–ø–µ—Ö',
    };

    const lessonInfo = { lesson_number: 3, title: '–£—Ä–æ–∫ 3' };
    const html = formatDefaultTemplateContent(template, lessonInfo, false);

    // Check that dangerous characters are escaped
    expect(html).toContain('&lt;script&gt;');
    expect(html).toContain('&lt;b&gt;');
    expect(html).toContain('&amp;');
    expect(html).toContain('&quot;');
    expect(html).toContain('&#039;');
    expect(html).toContain('&gt;');
    expect(html).toContain('&lt;');
    
    // Should not contain raw HTML
    expect(html).not.toContain('<script>');
    expect(html).not.toContain('<b>');
  });

  it('should handle empty arrays gracefully', () => {
    const template: LessonTemplate = {
      introduction: '–í–≤–µ–¥–µ–Ω–∏–µ',
      key_points: [],
      practical_tips: [],
      homework: '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ',
      motivational_line: '–ú–æ—Ç–∏–≤–∞—Ü–∏—è',
    };

    const lessonInfo = { lesson_number: 4, title: '–£—Ä–æ–∫ 4' };
    const html = formatDefaultTemplateContent(template, lessonInfo, false);

    // Should still produce valid HTML
    expect(html).toContain('persona-block');
    expect(html).toContain('–í–≤–µ–¥–µ–Ω–∏–µ');
    expect(html).toContain('–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ');
    
    // Should not render sections with empty arrays
    expect(html).not.toContain('–ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã');
    expect(html).not.toContain('–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã');
  });

  it('should render optional sections when present', () => {
    const template: LessonTemplate = {
      introduction: '–í–≤–µ–¥–µ–Ω–∏–µ',
      key_points: ['–ü—É–Ω–∫—Ç 1', '–ü—É–Ω–∫—Ç 2', '–ü—É–Ω–∫—Ç 3', '–ü—É–Ω–∫—Ç 4'],
      practical_tips: ['–°–æ–≤–µ—Ç 1', '–°–æ–≤–µ—Ç 2', '–°–æ–≤–µ—Ç 3'],
      important_notes: ['–í–∞–∂–Ω–æ 1', '–í–∞–∂–Ω–æ 2'],
      equipment_preparation: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
      homework: '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ',
      motivational_line: '–ú–æ—Ç–∏–≤–∞—Ü–∏—è',
    };

    const lessonInfo = { lesson_number: 5, title: '–£—Ä–æ–∫ 5' };
    const html = formatDefaultTemplateContent(template, lessonInfo, false);

    expect(html).toContain('‚ö†Ô∏è –í–∞–∂–Ω–æ');
    expect(html).toContain('–í–∞–∂–Ω–æ 1');
    expect(html).toContain('–í–∞–∂–Ω–æ 2');
    expect(html).toContain('üß∞ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞');
    expect(html).toContain('–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ');
  });

  it('should not render optional sections when absent', () => {
    const template: LessonTemplate = {
      introduction: '–í–≤–µ–¥–µ–Ω–∏–µ',
      key_points: ['–ü—É–Ω–∫—Ç 1', '–ü—É–Ω–∫—Ç 2', '–ü—É–Ω–∫—Ç 3', '–ü—É–Ω–∫—Ç 4'],
      practical_tips: ['–°–æ–≤–µ—Ç 1', '–°–æ–≤–µ—Ç 2', '–°–æ–≤–µ—Ç 3'],
      homework: '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ',
      motivational_line: '–ú–æ—Ç–∏–≤–∞—Ü–∏—è',
    };

    const lessonInfo = { lesson_number: 6, title: '–£—Ä–æ–∫ 6' };
    const html = formatDefaultTemplateContent(template, lessonInfo, false);

    expect(html).not.toContain('‚ö†Ô∏è –í–∞–∂–Ω–æ');
    expect(html).not.toContain('üß∞ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞');
  });
});
